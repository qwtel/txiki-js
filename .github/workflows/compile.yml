name: Compile

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: sudo snap install zig --classic --beta
      - uses: actions/cache@v4
        with:
          path: .zig-cache
          key: ${{ runner.os }}-zig-cache-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-zig-cache-v2-
      - run: zig build -Doptimize=ReleaseSmall --summary all
      - run: zig-out/bin/tjs test tests
  build:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: sudo snap install zig --classic --beta
      - uses: actions/cache@v4
        with:
          path: .zig-cache
          key: ${{ runner.os }}-zig-cache-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-zig-cache-v2-
      - run: |
          openssl enc -aes-256-cbc -d -in _include.tar.gz.enc -out _include.tar.gz -pass pass:"${{ secrets.PASS }}"
          tar -xzf _include.tar.gz
          cp -r _include/* deps/mimalloc/include
      - run: zig build -Dmatrix -Doptimize=ReleaseSmall --summary all
      - uses: actions/upload-artifact@v4
        with:
          name: zig-out
          path: zig-out/*/*
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: zig-out
          path: dist
      - name: compress
        run: |
          cd dist
          for dir in */; do zip -r "${dir%/}.zip" "$dir"; done
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: "dist/*.zip"
